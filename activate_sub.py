"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python activate_sub.py <telegram_id> <days>
"""
import asyncio
import sys
from datetime import datetime, timedelta, timezone
from database import async_session_maker
from crud import get_user_by_telegram_id
from sqlalchemy import update
from models import User


async def activate_subscription(telegram_id: int, days: int = 30):
    """–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    async with async_session_maker() as session:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await get_user_by_telegram_id(session, telegram_id)
        
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (timezone-aware)
        expires_at = datetime.now(timezone.utc) + timedelta(days=days)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stmt = (
            update(User)
            .where(User.telegram_id == telegram_id)
            .values(subscription_expires_at=expires_at)
        )
        await session.execute(stmt)
        await session.commit()
        
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_display_name()}")
        print(f"üìß Telegram ID: {telegram_id}")
        print(f"üìÖ –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: {expires_at.strftime('%Y-%m-%d %H:%M:%S UTC')}")
        print(f"‚è∞ –î–Ω–µ–π: {days}")


if __name__ == '__main__':
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python activate_sub.py <telegram_id> [days]")
        print("–ü—Ä–∏–º–µ—Ä: python activate_sub.py 782769400 30")
        sys.exit(1)
    
    telegram_id = int(sys.argv[1])
    days = int(sys.argv[2]) if len(sys.argv) > 2 else 30
    
    asyncio.run(activate_subscription(telegram_id, days))
