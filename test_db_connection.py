"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_db_connection.py
"""
import asyncio
import os
from dotenv import load_dotenv
from sqlalchemy.ext.asyncio import create_async_engine

load_dotenv()

DATABASE_URL = os.getenv('DATABASE_URL')


async def test_connection():
    print("=" * 60)
    print("–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL")
    print("=" * 60)
    
    if not DATABASE_URL:
        print("‚ùå ERROR: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        print("\n–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ:")
        print("DATABASE_URL=postgresql+asyncpg://user:password@host:port/dbname")
        return
    
    # –°–∫—Ä—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –≤ –≤—ã–≤–æ–¥–µ
    safe_url = DATABASE_URL.replace(
        DATABASE_URL.split('@')[0].split('//')[1].split(':')[-1],
        '***'
    ) if '@' in DATABASE_URL else DATABASE_URL
    
    print(f"\nüìå DATABASE_URL: {safe_url}")
    print(f"\nüîÑ –ü—ã—Ç–∞—é—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É...")
    
    try:
        engine = create_async_engine(
            DATABASE_URL,
            echo=False,
            pool_pre_ping=True,
        )
        
        async with engine.begin() as conn:
            result = await conn.execute(
                __import__('sqlalchemy').text('SELECT version()')
            )
            version = result.scalar()
            print(f"\n‚úÖ –£–°–ü–ï–•! –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
            print(f"üìä PostgreSQL –≤–µ—Ä—Å–∏—è: {version}")
        
        await engine.dispose()
        print("\nüéâ –í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç! –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞.")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!")
        print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {e}")
        print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å DATABASE_URL –≤ —Ñ–∞–π–ª–µ .env")
        print("   2. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å PostgreSQL —Å–µ—Ä–≤–µ—Ä–∞ (—Ö–æ—Å—Ç, –ø–æ—Ä—Ç)")
        print("   3. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è")
        print("   4. –ß—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'ai_gf' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("   5. –§–∞–π—Ä–≤–æ–ª –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print(f"\nüìù –§–æ—Ä–º–∞—Ç DATABASE_URL:")
        print("   postgresql+asyncpg://username:password@host:port/database")
        print("   –ü—Ä–∏–º–µ—Ä:")
        print("   postgresql+asyncpg://postgres:mypass@192.168.1.100:5432/ai_gf")


if __name__ == '__main__':
    asyncio.run(test_connection())

