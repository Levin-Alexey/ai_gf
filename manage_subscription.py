"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
"""
import asyncio
from datetime import datetime, timedelta
from database import async_session_maker
from crud import get_user_by_telegram_id
from sqlalchemy import update
from models import User


async def activate_subscription(telegram_id: int, days: int = 30):
    """
    –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        telegram_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30)
    """
    async with async_session_maker() as session:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await get_user_by_telegram_id(session, telegram_id)
        
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
        expires_at = datetime.utcnow() + timedelta(days=days)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stmt = (
            update(User)
            .where(User.telegram_id == telegram_id)
            .values(subscription_expires_at=expires_at)
        )
        await session.execute(stmt)
        await session.commit()
        
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_display_name()}")
        print(f"üìß Telegram ID: {telegram_id}")
        print(f"üìÖ –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: {expires_at.strftime('%Y-%m-%d %H:%M:%S UTC')}")
        print(f"‚è∞ –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {days}")


async def deactivate_subscription(telegram_id: int):
    """
    –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        telegram_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    async with async_session_maker() as session:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await get_user_by_telegram_id(session, telegram_id)
        
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        stmt = (
            update(User)
            .where(User.telegram_id == telegram_id)
            .values(subscription_expires_at=None)
        )
        await session.execute(stmt)
        await session.commit()
        
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_display_name()}")
        print(f"üìß Telegram ID: {telegram_id}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –º–µ–Ω—é"""
    print("=" * 50)
    print("üíé –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–î–ü–ò–°–ö–ê–ú–ò")
    print("=" * 50)
    print()
    print("1. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (30 –¥–Ω–µ–π)")
    print("2. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (90 –¥–Ω–µ–π)")
    print("3. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (365 –¥–Ω–µ–π)")
    print("4. –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")
    print("5. –í—ã—Ö–æ–¥")
    print()
    
    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-5): ").strip()
    
    if choice == "5":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        return
    
    telegram_id = input("–í–≤–µ–¥–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
    
    try:
        telegram_id = int(telegram_id)
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Telegram ID!")
        return
    
    if choice == "1":
        await activate_subscription(telegram_id, days=30)
    elif choice == "2":
        await activate_subscription(telegram_id, days=90)
    elif choice == "3":
        await activate_subscription(telegram_id, days=365)
    elif choice == "4":
        await deactivate_subscription(telegram_id)
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")


if __name__ == '__main__':
    asyncio.run(main())
