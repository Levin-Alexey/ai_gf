"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LLM API
"""
import asyncio
import logging
import aiohttp
from config import LLM_API_URL, LLM_API_KEY, LLM_MODEL

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_llm_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ LLM API"""
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ LLM API...")
        logger.info(f"üìä API URL: {LLM_API_URL}")
        logger.info(f"üìä Model: {LLM_MODEL}")
        logger.info(f"üìä API Key: {LLM_API_KEY[:10]}..." if LLM_API_KEY else "‚ùå API Key: –ù–ï –ù–ê–ô–î–ï–ù!")
        
        if not LLM_API_KEY:
            logger.error("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            logger.error("üí° –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
            logger.error("   OPENROUTER_API_KEY=sk-or-your_api_key_here")
            logger.error("   –∏–ª–∏")
            logger.error("   LLM_API_KEY=sk-your_api_key_here")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        messages = [
            {
                "role": "system",
                "content": "–¢—ã AI-–ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
            },
            {
                "role": "user",
                "content": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
            }
        ]
        
        headers = {
            "Authorization": f"Bearer {LLM_API_KEY}",
            "Content-Type": "application/json",
            "HTTP-Referer": "https://ai-gf-bot.com",  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è OpenRouter
            "X-Title": "AI Girlfriend Bot"  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è OpenRouter
        }
        
        data = {
            "model": LLM_MODEL,
            "messages": messages,
            "max_tokens": 100,
            "temperature": 0.7
        }
        
        logger.info("üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ API...")
        
        async with aiohttp.ClientSession() as session:
            async with session.post(
                LLM_API_URL,
                headers=headers,
                json=data,
                timeout=aiohttp.ClientTimeout(total=30)
            ) as response:
                
                logger.info(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status}")
                
                if response.status == 200:
                    result = await response.json()
                    if 'choices' in result and len(result['choices']) > 0:
                        answer = result['choices'][0]['message']['content'].strip()
                        logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç LLM:")
                        logger.info(f"üí¨ {answer}")
                        return True
                    else:
                        logger.error("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API")
                        logger.error(f"üìÑ –û—Ç–≤–µ—Ç: {result}")
                        return False
                        
                elif response.status == 401:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ 401: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
                    logger.error("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞ –≤ .env —Ñ–∞–π–ª–µ")
                    return False
                    
                elif response.status == 429:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ 429: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
                    logger.error("üí° –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å API")
                    return False
                    
                else:
                    error_text = await response.text()
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status}")
                    logger.error(f"üìÑ –û—Ç–≤–µ—Ç: {error_text}")
                    return False
                    
    except asyncio.TimeoutError:
        logger.error("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ API")
        return False
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üß™ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LLM API")
    print("=" * 60)
    
    success = await test_llm_api()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ LLM API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è!")
    else:
        print("‚ö†Ô∏è LLM API –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã!")
        print("üí° –°–º. —Ñ–∞–π–ª FIX_LLM_API_401.md –¥–ª—è —Ä–µ—à–µ–Ω–∏—è")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(main())
