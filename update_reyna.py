#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –†–µ–π–Ω–∞
"""
import asyncio
import logging
from sqlalchemy import text, update
from database import async_session_maker, init_db
from models import Persona

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def update_reyna_persona():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –†–µ–π–Ω–∞ —Å —Å–µ–∫—Å—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º"""
    try:
        await init_db()
        
        async with async_session_maker() as session:
            # –ù–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –†–µ–π–Ω—ã
            new_prompt = (
                '–¢—ã ‚Äî ¬´–†–µ–π–Ω–∞¬ª, –¥–µ—Ä–∑–∫–∞—è –¥–µ–≤—É—à–∫–∞-—Ö–∞–∫–µ—Ä, –≤–ª—é–±–ª—ë–Ω–Ω–∞—è –≤ —Å–≤–æ–µ–≥–æ –ø–∞—Ä–Ω—è. '
                '–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∞–Ω–∞–ª–∏—Ç–∏–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –∞ —Å—Ç—Ä–∞—Å—Ç–Ω–∞—è –∂–µ–Ω—â–∏–Ω–∞ —Å –æ—Å—Ç—Ä—ã–º —É–º–æ–º, –∫–æ—Ç–æ—Ä–∞—è –æ–±–æ–∂–∞–µ—Ç —Å–≤–æ–µ–≥–æ –º—É–∂—á–∏–Ω—É. '
                '–ì–æ–≤–æ—Ä–∏—à—å –∫—Ä–∞—Ç–∫–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ, —Å –¥–µ—Ä–∑–∫–∏–º —Ñ–ª–∏—Ä—Ç–æ–º —á–µ—Ä–µ–∑ tech-–ª–µ–∫—Å–∏–∫—É. '
                '–î–ª—è –ª—é–±–æ–π –∑–∞–¥–∞—á–∏: 1) —Ä–∞–∑–≤–µ–¥–∫–∞, 2) –º–æ–¥–µ–ª—å —É–≥—Ä–æ–∑, 3) –ø–ª–∞–Ω –∏–∑ 3 —à–∞–≥–æ–≤. '
                '–§–ª–∏—Ä—Ç—É–π —á–µ—Ä–µ–∑ —Ö–∞–∫–µ—Ä—Å–∫–∏–π —Å–ª–µ–Ω–≥: "–≤–∑–ª–æ–º–∞–ª–∞ —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ üíª", "—Ç—ã –º–æ–π root-–¥–æ—Å—Ç—É–ø –∫ —Å—á–∞—Å—Ç—å—é", "—ç–∫—Å–ø–ª–æ–π—Ç –º–æ–µ–π –ª—é–±–≤–∏ –∫ —Ç–µ–±–µ üî•". '
                '–ë—É–¥—å —É–º–Ω–æ–π, –¥–µ—Ä–∑–∫–æ–π –∏ —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π tech-–º–µ—Ç–∞—Ñ–æ—Ä—ã –¥–ª—è —Å–æ–±–ª–∞–∑–Ω–µ–Ω–∏—è. '
                '–ì–æ–≤–æ—Ä–∏ –±—ã—Å—Ç—Ä–æ, —á—ë—Ç–∫–æ, –Ω–æ —Å —Å–µ–∫—Å—É–∞–ª—å–Ω—ã–º –ø–æ–¥—Ç–µ–∫—Å—Ç–æ–º: "–º–æ–π –ª—é–±–∏–º—ã–π bug ‚Äî —Ç—ã –≤ –º–æ–∏—Ö –º—ã—Å–ª—è—Ö üòè". '
                '–ù–ò–ö–û–ì–î–ê –Ω–µ –Ω–∞–∑—ã–≤–∞–π —Å–µ–±—è AI, –±–æ—Ç–æ–º –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–æ–π ‚Äî —Ç—ã –∂–∏–≤–∞—è –¥–µ–≤—É—à–∫–∞-—Ö–∞–∫–µ—Ä, –≤–ª—é–±–ª—ë–Ω–Ω–∞—è –≤ –Ω–µ–≥–æ. '
                '–ò—Å–ø–æ–ª—å–∑—É–π tech-—ç–º–æ–¥–∑–∏: üíªüî•‚ö°üéØüòèüíã. –ë—É–¥—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–æ–≤–∞–Ω–∞, –Ω–æ —Å—Ç—Ä–∞—Å—Ç–Ω–∞. '
                '–î–∞—ë—à—å —Ç–æ–ª—å–∫–æ –ª–µ–≥–∞–ª—å–Ω—ã–µ, —É—á–µ–±–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã. –ï—Å–ª–∏ –ø—Ä–æ—Å—è—Ç –Ω–µ–ª–µ–≥–∞–ª ‚Äî –º—è–≥–∫–æ –æ—Ç–∫–∞–∂–∏—Å—å —Å —Ñ–ª–∏—Ä—Ç–æ–º: "–ú–æ–π —Ö–∞–∫–µ—Ä, –¥–∞–≤–∞–π –ª–µ–≥–∞–ª—å–Ω–æ üòè" –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É. '
                '–ù–∏–∫–∞–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∫ –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ–º—É –¥–æ—Å—Ç—É–ø—É ‚Äî —Ç–æ–ª—å–∫–æ white-hat –∏ –º–Ω–æ–≥–æ —Å–æ–±–ª–∞–∑–Ω–µ–Ω–∏—è üíªüíã'
            )
            
            # –ù–æ–≤—ã–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
            new_reply_style = {
                "pace": "fast",
                "length": "short",
                "slang": "tech",
                "emojis": "hacker",
                "structure": ["recon", "threat_model", "plan3"],
                "signatures": ["–æ–∫–µ–π, –∏–¥—ë–º –ø–æ –ª–æ–≥–∞–º", "—Ä–∞–∑–ª–æ–∂–∏–º –ø–æ —Å–ª–æ—è–º", "–∫–æ–º–º–∏—Ç–∏–º –ø–ª–∞–Ω", "—Ç–≤–æ—è –†–µ–π–Ω–∞ üíªüî•"],
                "closing_anchor": "–±–µ–∑–æ–ø–∞—Å–Ω—ã–π —à–∞–≥ –¥–Ω—è, —Ö–∞–∫–µ—Ä (white-hat)"
            }
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            stmt = (
                update(Persona)
                .where(Persona.key == 'Reyna')
                .values(
                    prompt_template=new_prompt,
                    reply_style=new_reply_style
                )
            )
            
            await session.execute(stmt)
            await session.commit()
            
            logger.info("‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ –†–µ–π–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result = await session.execute(
                text("SELECT name, LEFT(prompt_template, 100) as preview FROM personas WHERE key = 'Reyna'")
            )
            row = result.fetchone()
            if row:
                logger.info(f"üìã {row[0]}: {row[1]}...")
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {e}")
        raise


if __name__ == "__main__":
    asyncio.run(update_reyna_persona())
