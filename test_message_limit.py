"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ª–∏–º–∏—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
"""
import asyncio
from datetime import datetime, timedelta
from redis_client import redis_client
from database import async_session_maker
from crud import get_user_by_telegram_id
from utils import check_message_limit, get_subscription_status


async def test_limits():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –ª–∏–º–∏—Ç–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis
    await redis_client.connect()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    async with async_session_maker() as session:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID 782769400 –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏)
        user = await get_user_by_telegram_id(session, 782769400)
        
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.get_display_name()}")
        print(f"üìß Telegram ID: {user.telegram_id}")
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        print("\nüìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:")
        sub_status = await get_subscription_status(user)
        print(f"   –ï—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞: {sub_status['has_subscription']}")
        print(f"   –ò—Å—Ç–µ–∫–∞–µ—Ç: {sub_status['expires_at']}")
        print(f"   –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {sub_status['days_left']}")
        
        # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–∏–º–∏—Ç—ã –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
        print("\nüß™ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –ë–ï–ó –ø–æ–¥–ø–∏—Å–∫–∏")
        for i in range(7):
            can_send, left = await check_message_limit(redis_client, user)
            status = "‚úÖ" if can_send else "‚ùå"
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ {i+1}: {status} (–æ—Å—Ç–∞–ª–æ—Å—å: {left})")
        
        # 3. –°–∏–º—É–ª–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
        print("\nüß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ê–ö–¢–ò–í–ù–û–ô –ø–æ–¥–ø–∏—Å–∫–æ–π")
        user.subscription_expires_at = datetime.utcnow() + timedelta(days=30)
        for i in range(3):
            can_send, left = await check_message_limit(redis_client, user)
            status = "‚úÖ" if can_send else "‚ùå"
            limit_str = "–±–µ–∑–ª–∏–º–∏—Ç" if left == -1 else f"–æ—Å—Ç–∞–ª–æ—Å—å: {left}"
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ {i+1}: {status} ({limit_str})")
        
        # 4. –°–∏–º—É–ª–∏—Ä—É–µ–º –∏—Å—Ç—ë–∫—à—É—é –ø–æ–¥–ø–∏—Å–∫—É
        print("\nüß™ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ò–°–¢–Å–ö–®–ï–ô –ø–æ–¥–ø–∏—Å–∫–æ–π")
        user.subscription_expires_at = datetime.utcnow() - timedelta(days=1)
        can_send, left = await check_message_limit(redis_client, user)
        status = "‚úÖ" if can_send else "‚ùå"
        print(f"   –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {status} (–æ—Å—Ç–∞–ª–æ—Å—å: {left})")
        
    # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
    await redis_client.disconnect()
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!")


if __name__ == '__main__':
    asyncio.run(test_limits())
