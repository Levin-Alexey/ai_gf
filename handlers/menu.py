"""
–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
"""
import logging
from aiogram import Router, F
from aiogram.types import (
    Message,
    ReplyKeyboardMarkup,
    KeyboardButton
)

from database import async_session_maker
from crud import get_user_by_telegram_id

router = Router()
logger = logging.getLogger(__name__)


def get_main_menu_keyboard():
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üí¨ –ù–∞—á–∞—Ç—å —á–∞—Ç")],
            [KeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∞")],
            [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )
    return keyboard


async def show_main_menu(message: Message, user_name: str):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n\n"
        "–†–∞–¥–∞ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è! ‚ú®\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=get_main_menu_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å —á–∞—Ç" –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ handlers/chat.py


@router.message(F.text == "üí≥ –û–ø–ª–∞—Ç–∞")
async def handle_payment(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–ø–ª–∞—Ç–∞'"""
    # –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ payment
    try:
        from .payment import send_subscription_menu_message
        await send_subscription_menu_message(message)
    except Exception:
        # fallback —Ç–µ–∫—Å—Ç
        await message.answer(
            "üí≥ –û–ø–ª–∞—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å–∫–∏\n\n"
            "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç —Ç–∞—Ä–∏—Ñ—ã! üíé"
        )


def get_settings_keyboard():
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üé® –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä")],
            # [KeyboardButton(text="ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞")],  # –í—Ä–µ–º–µ–Ω–Ω–æ
            # –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")],
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )
    return keyboard


@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def handle_settings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'"""
    logger.info(
        f"‚öôÔ∏è –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
        f"{message.from_user.id}"
    )
    async with async_session_maker() as session:
        user = await get_user_by_telegram_id(
            session,
            telegram_id=message.from_user.id
        )

    if user:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        tone_text = user.tone.value if user.tone else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        interests_count = len(user.interests) if user.interests else 0
        goals_count = len(user.goals) if user.goals else 0

        settings_text = (
            f"‚öôÔ∏è –¢–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
            f"üé® –¢–æ–Ω –æ–±—â–µ–Ω–∏—è: {tone_text}\n"
            f"üéØ –ò–Ω—Ç–µ—Ä–µ—Å–æ–≤: {interests_count}\n"
            f"üéØ –¶–µ–ª–µ–π: {goals_count}\n"
            f"üìù –û —Å–µ–±–µ: {'–ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if user.about else '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}\n\n"
            f"–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:"
        )

        # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üé® –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä")],
                # [KeyboardButton(text="ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞")],  # –í—Ä–µ–º–µ–Ω–Ω–æ
                # –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ
                [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
            ],
            resize_keyboard=True,
            one_time_keyboard=False
        )

        await message.answer(
            settings_text,
            reply_markup=keyboard
        )
    else:
        await message.answer(
            "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É. –ù–∞–ø–∏—à–∏ /start"
        )


@router.message(F.text == "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def handle_back_to_menu(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é'"""
    user_name = (
        message.from_user.first_name or "–¥—Ä—É–≥"
        if message.from_user else "–¥—Ä—É–≥"
    )
    await show_main_menu(message, user_name)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫
@router.message(F.text == "üé® –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä")
async def handle_character_settings_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä'"""
    logger.info(
        f"üé® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
        f"{message.from_user.id}"
    )

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ character_settings
    from .character_settings import handle_character_settings
    await handle_character_settings(message)


# @router.message(F.text == "ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞")
# async def handle_bot_settings_button(message: Message):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞'"""
#     logger.info(
#         f"ü§ñ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
#         f"{message.from_user.id}"
#     )
#
#     # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ bot_settings
#     from .bot_settings import handle_bot_settings
#     await handle_bot_settings(message)


@router.message(F.text == "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def handle_back_to_main_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é'"""
    logger.info(
        f"üîô –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
        f"{message.from_user.id}"
    )

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    await show_main_menu(message, user_name)
