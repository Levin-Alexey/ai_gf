"""
–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
"""
import logging
from aiogram import Router, F
from aiogram.types import (
    Message,
    ReplyKeyboardMarkup,
    KeyboardButton
)

from database import async_session_maker
from crud import get_user_by_telegram_id

router = Router()
logger = logging.getLogger(__name__)


def get_main_menu_keyboard():
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üí¨ –ù–∞—á–∞—Ç—å —á–∞—Ç")],
            [KeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∞")],
            [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )
    return keyboard


async def show_main_menu(message: Message, user_name: str):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n\n"
        "–†–∞–¥–∞ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è! ‚ú®\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=get_main_menu_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å —á–∞—Ç" –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ handlers/chat.py


@router.message(F.text == "üí≥ –û–ø–ª–∞—Ç–∞")
async def handle_payment(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–ø–ª–∞—Ç–∞'"""
    await message.answer(
        "üí≥ –û–ø–ª–∞—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å–∫–∏\n\n"
        "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ... –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç —Ç–∞—Ä–∏—Ñ—ã! üíé"
    )


@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def handle_settings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'"""
    async with async_session_maker() as session:
        user = await get_user_by_telegram_id(
            session,
            telegram_id=message.from_user.id
        )

    if user:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        tone_text = user.tone.value if user.tone else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        interests_count = len(user.interests) if user.interests else 0
        goals_count = len(user.goals) if user.goals else 0

        settings_text = (
            f"‚öôÔ∏è –¢–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
            f"üé® –¢–æ–Ω –æ–±—â–µ–Ω–∏—è: {tone_text}\n"
            f"üéØ –ò–Ω—Ç–µ—Ä–µ—Å–æ–≤: {interests_count}\n"
            f"üéØ –¶–µ–ª–µ–π: {goals_count}\n"
            f"üìù –û —Å–µ–±–µ: {'–ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if user.about else '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}\n\n"
            f"–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..."
        )
        await message.answer(settings_text)
    else:
        await message.answer(
            "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É. –ù–∞–ø–∏—à–∏ /start"
        )