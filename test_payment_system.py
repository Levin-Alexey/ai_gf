"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ÆKassa –∏ webhook —Å–µ—Ä–≤–µ—Ä–∞
"""
import asyncio
import sys


async def test_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...\n")
    
    errors = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º yookassa
    try:
        from yookassa import Configuration, Payment
        print("‚úÖ yookassa —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        errors.append("‚ùå yookassa –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print(errors[-1])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º fastapi
    try:
        from fastapi import FastAPI
        print("‚úÖ fastapi —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        errors.append("‚ùå fastapi –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print(errors[-1])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º uvicorn
    try:
        import uvicorn
        print("‚úÖ uvicorn —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        errors.append("‚ùå uvicorn –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print(errors[-1])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º pydantic
    try:
        from pydantic import BaseModel
        print("‚úÖ pydantic —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        errors.append("‚ùå pydantic –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print(errors[-1])
    
    print()
    
    if errors:
        print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: .\\install_payment_deps.bat")
        return False
    else:
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!\n")
        return True


async def test_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n")
    
    from config import (
        PAYMENT_SHOP_ID,
        PAYMENT_SECRET_KEY,
        WEBHOOK_URL
    )
    
    errors = []
    
    if not PAYMENT_SHOP_ID:
        errors.append("‚ùå PAYMENT_SHOP_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env")
        print(errors[-1])
    else:
        print(f"‚úÖ PAYMENT_SHOP_ID: {PAYMENT_SHOP_ID}")
    
    if not PAYMENT_SECRET_KEY:
        errors.append("‚ùå PAYMENT_SECRET_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env")
        print(errors[-1])
    else:
        print(f"‚úÖ PAYMENT_SECRET_KEY: {PAYMENT_SECRET_KEY[:20]}...")
    
    if not WEBHOOK_URL:
        errors.append("‚ö†Ô∏è  WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ .env)")
        print(errors[-1])
    else:
        print(f"‚úÖ WEBHOOK_URL: {WEBHOOK_URL}")
    
    print()
    
    if errors:
        print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π!")
        return False
    else:
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!\n")
        return True


async def test_yookassa_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ÆKassa API"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ÆKassa...\n")
    
    try:
        from yookassa import Configuration, Payment
        from config import PAYMENT_SHOP_ID, PAYMENT_SECRET_KEY
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ÆKassa
        Configuration.account_id = PAYMENT_SHOP_ID
        Configuration.secret_key = PAYMENT_SECRET_KEY
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–µ–∂–µ–π (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        payments = Payment.list({"limit": 1})
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ÆKassa —É—Å–ø–µ—à–Ω–æ!")
        print(f"   Account ID: {PAYMENT_SHOP_ID}")
        print(f"   –ü–ª–∞—Ç–µ–∂–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ\n")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ÆKassa: {e}\n")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ PAYMENT_SHOP_ID –∏ PAYMENT_SECRET_KEY\n")
        return False


async def test_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n")
    
    try:
        from database import async_session_maker
        from sqlalchemy import text
        
        async with async_session_maker() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ subscription_expires_at
            result = await session.execute(text("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_name='users' 
                AND column_name='subscription_expires_at'
            """))
            
            if result.scalar():
                print("‚úÖ –ü–æ–ª–µ subscription_expires_at —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω–¥–µ–∫—Å–∞
                result = await session.execute(text("""
                    SELECT indexname 
                    FROM pg_indexes 
                    WHERE tablename='users' 
                    AND indexname='idx_users_subscription'
                """))
                
                if result.scalar():
                    print("‚úÖ –ò–Ω–¥–µ–∫—Å idx_users_subscription —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print("‚ö†Ô∏è  –ò–Ω–¥–µ–∫—Å idx_users_subscription –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
                print()
                return True
            else:
                print("‚ùå –ü–æ–ª–µ subscription_expires_at –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python apply_subscription_migration.py\n")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}\n")
        return False


async def test_webhook_server():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞...\n")
    
    try:
        import webhook_server
        print("‚úÖ webhook_server.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python webhook_server.py")
        print("   –ü–æ—Ä—Ç: 8000\n")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ webhook_server: {e}\n")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 60)
    print("üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ü–õ–ê–¢–ï–ñ–ï–ô")
    print("=" * 60)
    print()
    
    results = []
    
    # –¢–µ—Å—Ç 1: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    results.append(await test_imports())
    
    # –¢–µ—Å—Ç 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    results.append(await test_config())
    
    # –¢–µ—Å—Ç 3: –ÆKassa
    results.append(await test_yookassa_connection())
    
    # –¢–µ—Å—Ç 4: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    results.append(await test_database())
    
    # –¢–µ—Å—Ç 5: Webhook —Å–µ—Ä–≤–µ—Ä
    results.append(await test_webhook_server())
    
    # –ò—Ç–æ–≥–∏
    print("=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í")
    print("=" * 60)
    print()
    
    passed = sum(results)
    total = len(results)
    
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {total - passed}/{total}")
    print()
    
    if all(results):
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print()
        print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –î–æ–±–∞–≤—å—Ç–µ WEBHOOK_URL –≤ .env")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python webhook_server.py")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –≤ –ÆKassa: https://yookassa.ru/my/shop-settings")
        print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–ª–∞—Ç—ë–∂ –≤ –±–æ—Ç–µ!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã!")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞.")
    
    print()


if __name__ == '__main__':
    asyncio.run(main())
