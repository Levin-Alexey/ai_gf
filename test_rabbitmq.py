"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RabbitMQ
"""
import logging
from queue_client import queue_client
from config import RABBITMQ_HOST, RABBITMQ_PORT, RABBITMQ_USER, RABBITMQ_VHOST

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_rabbitmq():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ"""
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ...")
        logger.info(f"üìä –•–æ—Å—Ç: {RABBITMQ_HOST}:{RABBITMQ_PORT}")
        logger.info(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {RABBITMQ_USER}")
        logger.info(f"üìä Vhost: {RABBITMQ_VHOST}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        queue_client.connect()
        logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RabbitMQ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        test_message = {
            "user_id": 123456,
            "chat_id": 123456,
            "message": "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            "timestamp": 1234567890
        }
        
        queue_client.publish_message(test_message)
        logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å!")
        
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        queue_client.disconnect()
        logger.info("‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç RabbitMQ —É—Å–ø–µ—à–Ω–æ!")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ RabbitMQ: {e}")
        logger.error(f"‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        return False

if __name__ == "__main__":
    success = test_rabbitmq()
    if success:
        print("\nüéâ RabbitMQ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è RabbitMQ –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã!")