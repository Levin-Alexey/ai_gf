"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–ø–ª–∞—Ç—ã:
1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
2. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
3. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
"""
import asyncio
import sys
from datetime import datetime, timezone

from database import async_session_maker
from sqlalchemy import select
from models import User


async def test_payment_flow(telegram_id: int):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–ø–ª–∞—Ç—ã"""
    
    print("=" * 60)
    print("üß™ –¢–ï–°–¢ –ü–õ–ê–¢–Å–ñ–ù–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    print()
    
    async with async_session_maker() as session:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}...")
        result = await session.execute(
            select(User).where(User.telegram_id == telegram_id)
        )
        user = result.scalar_one_or_none()
        
        if not user:
            print(f"   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
            print(f"   üí° –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É")
            return
        
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username or user.first_name}")
        print()
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É
        print("2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏...")
        if user.subscription_expires_at:
            now = datetime.now(timezone.utc)
            if user.subscription_expires_at > now:
                days_left = (user.subscription_expires_at - now).days
                print(f"   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞")
                print(f"   üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç: {user.subscription_expires_at.strftime('%Y-%m-%d %H:%M:%S UTC')}")
                print(f"   ‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {days_left}")
            else:
                print(f"   ‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞: {user.subscription_expires_at.strftime('%Y-%m-%d %H:%M:%S UTC')}")
        else:
            print(f"   ‚ÑπÔ∏è  –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç")
        print()
        
        # 3. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
        print("3Ô∏è‚É£ –ö–ê–ö –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–¢–¨ –û–ü–õ–ê–¢–£:")
        print()
        print("   –®–∞–≥ 1: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É 6 —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥")
        print("          (–ª–∏–º–∏—Ç 5 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å)")
        print()
        print("   –®–∞–≥ 2: –ù–∞ 6-–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞:")
        print("          üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")
        print()
        print("   –®–∞–≥ 3: –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ:")
        print("          üìÖ 1 –º–µ—Å—è—Ü ‚Äî 10‚ÇΩ (–¢–ï–°–¢)")
        print()
        print("   –®–∞–≥ 4: –ù–∞–∂–º–∏—Ç–µ '–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ'")
        print()
        print("   –®–∞–≥ 5: –û–ø–ª–∞—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ä—Ç–æ–π:")
        print("          –ù–æ–º–µ—Ä: 5555 5555 5555 4444")
        print("          –°—Ä–æ–∫: 12/24")
        print("          CVC: 123")
        print()
        print("   –®–∞–≥ 6: –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã webhook –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:")
        print("          ‚Ä¢ –ü–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –ÆKassa")
        print("          ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç –ø–æ–¥–ø–∏—Å—å")
        print("          ‚Ä¢ –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π")
        print("          ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print()
        print("   –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ webhook:")
        print("          sudo journalctl -u ai-gf-webhook -f")
        print()
        print("   –î–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è:")
        print("          ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è {telegram_id}")
        print()
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        
        from config import (
            PAYMENT_SHOP_ID,
            PAYMENT_SECRET_KEY,
            WEBHOOK_URL,
            PAYMENT_RETURN_URL
        )
        
        errors = []
        
        if not PAYMENT_SHOP_ID:
            errors.append("   ‚ùå PAYMENT_SHOP_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print(f"   ‚úÖ PAYMENT_SHOP_ID: {PAYMENT_SHOP_ID}")
        
        if not PAYMENT_SECRET_KEY:
            errors.append("   ‚ùå PAYMENT_SECRET_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print(f"   ‚úÖ PAYMENT_SECRET_KEY: {'*' * 20}")
        
        if not WEBHOOK_URL or "pay.aigirlfriendbot.ru" not in WEBHOOK_URL:
            errors.append("   ‚ùå WEBHOOK_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print(f"   ‚úÖ WEBHOOK_URL: {WEBHOOK_URL}")
        
        if not PAYMENT_RETURN_URL:
            errors.append("   ‚ùå PAYMENT_RETURN_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print(f"   ‚úÖ PAYMENT_RETURN_URL: {PAYMENT_RETURN_URL}")
        
        if errors:
            print()
            print("‚ö†Ô∏è  –û–®–ò–ë–ö–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
            for error in errors:
                print(error)
            print()
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
            return
        
        print()
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
        print("5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞...")
        try:
            import aiohttp
            async with aiohttp.ClientSession() as client:
                async with client.get("https://pay.aigirlfriendbot.ru/health") as resp:
                    if resp.status == 200:
                        data = await resp.json()
                        print(f"   ‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
                        print(f"   üìä –°—Ç–∞—Ç—É—Å: {data.get('status')}")
                        print(f"   üïê Timestamp: {data.get('timestamp')}")
                    else:
                        print(f"   ‚ùå Webhook —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {resp.status}")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å webhook: {e}")
            print(f"   üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ webhook –∑–∞–ø—É—â–µ–Ω:")
            print(f"      sudo systemctl status ai-gf-webhook")
        
        print()
        
        # 6. –ò—Ç–æ–≥
        print("=" * 60)
        print("üìã –ò–¢–û–ì:")
        print("=" * 60)
        print()
        print("‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!")
        print()
        print("üí° –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤—ã—à–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã")
        print()
        print("üìä –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞:")
        print(f"   python test_payment_flow.py {telegram_id}")
        print()
        print("=" * 60)


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_payment_flow.py <telegram_id>")
        print("–ü—Ä–∏–º–µ—Ä: python test_payment_flow.py 782769400")
        sys.exit(1)
    
    telegram_id = int(sys.argv[1])
    asyncio.run(test_payment_flow(telegram_id))
